outlier_reporter = ifelse((qest1_2 >
((quantile(mturk$qest1_2, .75, na.rm=TRUE)) + (1.5*IQR(qest1_2, na.rm=TRUE)))) |
(qest1_1 <
((quantile(mturk$qest1_2, .25, na.rm=TRUE)) - (1.5*IQR(qest1_2, na.rm=TRUE)))),
1, 0),)
table(mturk$outlier_reporter)
mturk <- mturk %>%
mutate(qest3_1 = ifelse((qest1_1 >
((quantile(mturk$qest1_1, .75, na.rm=TRUE)) + (1.5*IQR(qest1_1, na.rm=TRUE)))) |
(qest1_1 <
((quantile(mturk$qest1_1, .25, na.rm=TRUE)) - (1.5*IQR(qest1_1, na.rm=TRUE)))),
1, 0),
qest3_2 = ifelse((qest1_2 >
((quantile(mturk$qest1_2, .75, na.rm=TRUE)) + (1.5*IQR(qest1_2, na.rm=TRUE)))) |
(qest1_2 <
((quantile(mturk$qest1_2, .25, na.rm=TRUE)) - (1.5*IQR(qest1_2, na.rm=TRUE)))),
1, 0),
qest3_3 = ifelse((qest1_3 >
((quantile(mturk$qest1_3, .75, na.rm=TRUE)) + (1.5*IQR(qest1_3, na.rm=TRUE)))) |
(qest1_3 <
((quantile(mturk$qest1_3, .25, na.rm=TRUE)) - (1.5*IQR(qest1_3, na.rm=TRUE)))),
1, 0),
qest3_4 = ifelse((qest1_4 >
((quantile(mturk$qest1_4, .75, na.rm=TRUE)) + (1.5*IQR(qest1_4, na.rm=TRUE)))) |
(qest1_4 <
((quantile(mturk$qest1_4, .25, na.rm=TRUE)) - (1.5*IQR(qest1_4, na.rm=TRUE)))),
1, 0),
qest3_5 = ifelse((qest1_5 >
((quantile(mturk$qest1_5, .75, na.rm=TRUE)) + (1.5*IQR(qest1_5, na.rm=TRUE)))) |
(qest1_5 <
((quantile(mturk$qest1_5, .25, na.rm=TRUE)) - (1.5*IQR(qest1_5, na.rm=TRUE)))),
1, 0))
mturk_gather <- mturk %>%
gather(job, estimate, starts_with("qest")) %>%
mutate(question = str_sub(job,5,5),
job = str_sub(job,7,7)) %>%
spread(question, estimate) %>%
rename(est_salary = "1",
est_rank = "2",
salary_outlier = "3") %>%
mutate(job = factor(job,
labels = c("Electrical Engineer",
"Reporter",
"Investment Banker",
"Janitor",
"Geology Research Associate")),
job = factor(job,
levels = c("Janitor",
"Reporter",
"Geology Research Associate",
"Electrical Engineer",
"Investment Banker")),
est_salary = as.numeric(est_salary),
est_rank = as.numeric(est_rank))
table(mturk_gather$salary_outlier)
table(mturk_gather$salary_outlier[mturk_gather$job=="Electrical Engineer"])
table(mturk_gather$salary_outlier[mturk_gather$job=="Investment Banker"])
table(mturk_gather$salary_outlier[mturk_gather$job=="Geology Research Associate"])
table(mturk_gather$salary_outlier[mturk_gather$job=="Reporter"])
table(mturk_gather$salary_outlier[mturk_gather$job=="Janitor"])
mturk <- mturk %>%
mutate(qest3_1 = ifelse((qest1_1 >
((quantile(mturk$qest1_1, .75, na.rm=TRUE)) + (2*IQR(qest1_1, na.rm=TRUE)))) |
(qest1_1 <
((quantile(mturk$qest1_1, .25, na.rm=TRUE)) - (2*IQR(qest1_1, na.rm=TRUE)))),
1, 0),
qest3_2 = ifelse((qest1_2 >
((quantile(mturk$qest1_2, .75, na.rm=TRUE)) + (2*IQR(qest1_2, na.rm=TRUE)))) |
(qest1_2 <
((quantile(mturk$qest1_2, .25, na.rm=TRUE)) - (2*IQR(qest1_2, na.rm=TRUE)))),
1, 0),
qest3_3 = ifelse((qest1_3 >
((quantile(mturk$qest1_3, .75, na.rm=TRUE)) + (2*IQR(qest1_3, na.rm=TRUE)))) |
(qest1_3 <
((quantile(mturk$qest1_3, .25, na.rm=TRUE)) - (2*IQR(qest1_3, na.rm=TRUE)))),
1, 0),
qest3_4 = ifelse((qest1_4 >
((quantile(mturk$qest1_4, .75, na.rm=TRUE)) + (2*IQR(qest1_4, na.rm=TRUE)))) |
(qest1_4 <
((quantile(mturk$qest1_4, .25, na.rm=TRUE)) - (2*IQR(qest1_4, na.rm=TRUE)))),
1, 0),
qest3_5 = ifelse((qest1_5 >
((quantile(mturk$qest1_5, .75, na.rm=TRUE)) + (2*IQR(qest1_5, na.rm=TRUE)))) |
(qest1_5 <
((quantile(mturk$qest1_5, .25, na.rm=TRUE)) - (2*IQR(qest1_5, na.rm=TRUE)))),
1, 0))
table(mturk_gather$outlier)
table(mturk_gather$outlier[mturk_gather$job=="Investment Banker"])
mturk_gather <- mturk %>%
gather(job, estimate, starts_with("qest")) %>%
mutate(question = str_sub(job,5,5),
job = str_sub(job,7,7)) %>%
spread(question, estimate) %>%
rename(est_salary = "1",
est_rank = "2",
salary_outlier = "3") %>%
mutate(job = factor(job,
labels = c("Electrical Engineer",
"Reporter",
"Investment Banker",
"Janitor",
"Geology Research Associate")),
job = factor(job,
levels = c("Janitor",
"Reporter",
"Geology Research Associate",
"Electrical Engineer",
"Investment Banker")),
est_salary = as.numeric(est_salary),
est_rank = as.numeric(est_rank)) %>%
filter(outlier == 0)
salary_plot <- ggplot(mturk_gather, aes(x = est_salary,
color = job, fill = job))
salary_plot + geom_density() + facet_grid(job~.) +
scale_fill_viridis_d() + scale_color_viridis_d() +
theme(legend.position = "bottom")
rank_plot <- ggplot(mturk_gather, aes(x = est_rank,
color = job, fill = job))
rank_plot + geom_histogram() + facet_grid(job~.) +
scale_fill_viridis_d() + scale_color_viridis_d() +
theme(legend.position = "bottom")
rank_plot <- ggplot(mturk_gather, aes(x = est_rank,
color = job, fill = job))
rank_plot + geom_histogram() + facet_grid(job~.) +
scale_fill_viridis_d() + scale_color_viridis_d() +
theme(legend.position = "bottom")
round(prop.table(table(mturk$treatment, mturk$incdiff_toolarge),1),3)
round(prop.table(table(mturk$treatment, mturk$incdiff_benefits_rich),1),3)
round(prop.table(table(mturk$treatment, mturk$incdiff_necessary),1),3)
round(prop.table(table(mturk$treatment, mturk$wealthy_taxes),1),3)
round(prop.table(table(mturk$treatment, mturk$fairshot),1),3)
round(prop.table(table(mturk$treatment, mturk$grads_deserve_pay),1),3)
mturk_gather2 <- mturk %>%
gather(question, answer, incdiff_toolarge:fairshot) %>%
count(question, answer, treatment) %>%
group_by(question, treatment) %>%
mutate(prop = round(n / sum(n),2),
answer = factor(answer,
levels = c("Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree")))
mturk <- mturk %>%
mutate(qest3_1 = ifelse((qest1_1 >
((quantile(mturk$qest1_1, .75, na.rm=TRUE)) + (2*IQR(qest1_1, na.rm=TRUE)))) |
(qest1_1 <
((quantile(mturk$qest1_1, .25, na.rm=TRUE)) - (2*IQR(qest1_1, na.rm=TRUE)))),
1, 0),
qest3_2 = ifelse((qest1_2 >
((quantile(mturk$qest1_2, .75, na.rm=TRUE)) + (2*IQR(qest1_2, na.rm=TRUE)))) |
(qest1_2 <
((quantile(mturk$qest1_2, .25, na.rm=TRUE)) - (2*IQR(qest1_2, na.rm=TRUE)))),
1, 0),
qest3_3 = ifelse((qest1_3 >
((quantile(mturk$qest1_3, .75, na.rm=TRUE)) + (2*IQR(qest1_3, na.rm=TRUE)))) |
(qest1_3 <
((quantile(mturk$qest1_3, .25, na.rm=TRUE)) - (2*IQR(qest1_3, na.rm=TRUE)))),
1, 0),
qest3_4 = ifelse((qest1_4 >
((quantile(mturk$qest1_4, .75, na.rm=TRUE)) + (2*IQR(qest1_4, na.rm=TRUE)))) |
(qest1_4 <
((quantile(mturk$qest1_4, .25, na.rm=TRUE)) - (2*IQR(qest1_4, na.rm=TRUE)))),
1, 0),
qest3_5 = ifelse((qest1_5 >
((quantile(mturk$qest1_5, .75, na.rm=TRUE)) + (2*IQR(qest1_5, na.rm=TRUE)))) |
(qest1_5 <
((quantile(mturk$qest1_5, .25, na.rm=TRUE)) - (2*IQR(qest1_5, na.rm=TRUE)))),
1, 0)) %>%
filter(qest3_1 == 0 | qest3_2 == 0 | qest3_3 == 0 | qest3_4 == 0 | qest3_5 == 0)
table(mturk$qest3_1)
table(mturk$qest3_2)
mturk <- mturk %>%
mutate(qest3_1 = ifelse((qest1_1 >
((quantile(mturk$qest1_1, .75, na.rm=TRUE)) + (2*IQR(qest1_1, na.rm=TRUE)))) |
(qest1_1 <
((quantile(mturk$qest1_1, .25, na.rm=TRUE)) - (2*IQR(qest1_1, na.rm=TRUE)))),
1, 0),
qest3_2 = ifelse((qest1_2 >
((quantile(mturk$qest1_2, .75, na.rm=TRUE)) + (2*IQR(qest1_2, na.rm=TRUE)))) |
(qest1_2 <
((quantile(mturk$qest1_2, .25, na.rm=TRUE)) - (2*IQR(qest1_2, na.rm=TRUE)))),
1, 0),
qest3_3 = ifelse((qest1_3 >
((quantile(mturk$qest1_3, .75, na.rm=TRUE)) + (2*IQR(qest1_3, na.rm=TRUE)))) |
(qest1_3 <
((quantile(mturk$qest1_3, .25, na.rm=TRUE)) - (2*IQR(qest1_3, na.rm=TRUE)))),
1, 0),
qest3_4 = ifelse((qest1_4 >
((quantile(mturk$qest1_4, .75, na.rm=TRUE)) + (2*IQR(qest1_4, na.rm=TRUE)))) |
(qest1_4 <
((quantile(mturk$qest1_4, .25, na.rm=TRUE)) - (2*IQR(qest1_4, na.rm=TRUE)))),
1, 0),
qest3_5 = ifelse((qest1_5 >
((quantile(mturk$qest1_5, .75, na.rm=TRUE)) + (2*IQR(qest1_5, na.rm=TRUE)))) |
(qest1_5 <
((quantile(mturk$qest1_5, .25, na.rm=TRUE)) - (2*IQR(qest1_5, na.rm=TRUE)))),
1, 0)) %>%
filter(qest3_1 == 0) %>%
filter(qest3_2 == 0) %>%
filter(qest3_3 == 0) %>%
filter(qest3_4 == 0) %>%
filter(qest3_5 == 0)
table(mturk$qest3_2)
table(mturk$qest3_1)
table(mturk$qest3_3)
table(mturk$qest3_4)
table(mturk$qest3_5)
library(tidyverse)
library(ggthemes)
mturk <- read.csv("/users/lawrence/desktop/perceiving_inequality/mturk/mturk_clean.csv")
mturk <- mturk %>%
mutate(qest3_1 = ifelse((qest1_1 >
((quantile(mturk$qest1_1, .75, na.rm=TRUE)) + (2*IQR(qest1_1, na.rm=TRUE)))) |
(qest1_1 <
((quantile(mturk$qest1_1, .25, na.rm=TRUE)) - (2*IQR(qest1_1, na.rm=TRUE)))),
1, 0),
qest3_2 = ifelse((qest1_2 >
((quantile(mturk$qest1_2, .75, na.rm=TRUE)) + (2*IQR(qest1_2, na.rm=TRUE)))) |
(qest1_2 <
((quantile(mturk$qest1_2, .25, na.rm=TRUE)) - (2*IQR(qest1_2, na.rm=TRUE)))),
1, 0),
qest3_3 = ifelse((qest1_3 >
((quantile(mturk$qest1_3, .75, na.rm=TRUE)) + (2*IQR(qest1_3, na.rm=TRUE)))) |
(qest1_3 <
((quantile(mturk$qest1_3, .25, na.rm=TRUE)) - (2*IQR(qest1_3, na.rm=TRUE)))),
1, 0),
qest3_4 = ifelse((qest1_4 >
((quantile(mturk$qest1_4, .75, na.rm=TRUE)) + (2*IQR(qest1_4, na.rm=TRUE)))) |
(qest1_4 <
((quantile(mturk$qest1_4, .25, na.rm=TRUE)) - (2*IQR(qest1_4, na.rm=TRUE)))),
1, 0),
qest3_5 = ifelse((qest1_5 >
((quantile(mturk$qest1_5, .75, na.rm=TRUE)) + (2*IQR(qest1_5, na.rm=TRUE)))) |
(qest1_5 <
((quantile(mturk$qest1_5, .25, na.rm=TRUE)) - (2*IQR(qest1_5, na.rm=TRUE)))),
1, 0)) %>%
filter(qest3_1 == 0) %>%
filter(qest3_2 == 0) %>%
filter(qest3_3 == 0) %>%
filter(qest3_4 == 0) %>%
filter(qest3_5 == 0)
mturk_gather <- mturk %>%
gather(job, estimate, starts_with("qest")) %>%
mutate(question = str_sub(job,5,5),
job = str_sub(job,7,7)) %>%
spread(question, estimate) %>%
rename(est_salary = "1",
est_rank = "2",
salary_outlier = "3") %>%
mutate(job = factor(job,
labels = c("Electrical Engineer",
"Reporter",
"Investment Banker",
"Janitor",
"Geology Research Associate")),
job = factor(job,
levels = c("Janitor",
"Reporter",
"Geology Research Associate",
"Electrical Engineer",
"Investment Banker")),
est_salary = as.numeric(est_salary),
est_rank = as.numeric(est_rank)) %>%
filter(outlier == 0)
mturk_gather <- mturk %>%
gather(job, estimate, starts_with("qest")) %>%
mutate(question = str_sub(job,5,5),
job = str_sub(job,7,7)) %>%
spread(question, estimate) %>%
rename(est_salary = "1",
est_rank = "2",
salary_outlier = "3") %>%
mutate(job = factor(job,
labels = c("Electrical Engineer",
"Reporter",
"Investment Banker",
"Janitor",
"Geology Research Associate")),
job = factor(job,
levels = c("Janitor",
"Reporter",
"Geology Research Associate",
"Electrical Engineer",
"Investment Banker")),
est_salary = as.numeric(est_salary),
est_rank = as.numeric(est_rank)) %>%
filter(salary_outlier == 0)
salary_plot <- ggplot(mturk_gather, aes(x = est_salary,
color = job, fill = job))
salary_plot + geom_density() + facet_grid(job~.) +
scale_fill_viridis_d() + scale_color_viridis_d() +
theme(legend.position = "bottom")
rank_plot <- ggplot(mturk_gather, aes(x = est_rank,
color = job, fill = job))
rank_plot + geom_histogram() + facet_grid(job~.) +
scale_fill_viridis_d() + scale_color_viridis_d() +
theme(legend.position = "bottom")
round(prop.table(table(mturk$treatment, mturk$incdiff_toolarge),1),3)
round(prop.table(table(mturk$treatment, mturk$incdiff_benefits_rich),1),3)
round(prop.table(table(mturk$treatment, mturk$incdiff_necessary),1),3)
round(prop.table(table(mturk$treatment, mturk$wealthy_taxes),1),3)
round(prop.table(table(mturk$treatment, mturk$fairshot),1),3)
round(prop.table(table(mturk$treatment, mturk$grads_deserve_pay),1),3)
mturk_gather2 <- mturk %>%
gather(question, answer, incdiff_toolarge:fairshot) %>%
count(question, answer, treatment) %>%
group_by(question, treatment) %>%
mutate(prop = round(n / sum(n),2),
answer = factor(answer,
levels = c("Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree")))
question_plot <- ggplot(mturk_gather2, aes(x = answer, y = prop,
fill = factor(treatment)))
question_plot + geom_col(position = "dodge") + facet_grid(question~.) +
scale_fill_fivethirtyeight() + ylim(c(0,0.6)) +
geom_text(position = position_dodge(width = 1),
aes(x = answer, y = prop, label = prop), size = 3, vjust = -.5) +
theme(legend.position = "bottom",
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank())
mturk_agree <- mturk %>%
gather(question, answer, incdiff_toolarge:fairshot) %>%
mutate(agree = ifelse(answer == "Agree" | answer == "Strongly agree", 1, 0)) %>%
count(question, agree, treatment) %>%
group_by(question, treatment) %>%
mutate(prop = round(n / sum(n),2)) %>%
filter(agree == 1)
agree_plot <- ggplot(mturk_agree, aes(x = question, y = prop,
fill = factor(treatment)))
agree_plot + geom_col(position = "dodge") +
scale_fill_fivethirtyeight() + ylim(c(0,1)) +
geom_text(position = position_dodge(width = 1),
aes(x = question, y = prop, label = prop), size = 3, vjust = -.5) +
theme(legend.position = "bottom",
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title = element_blank())
mturk_gather <- mturk_gather %>%
mutate(actual_salary = ifelse(job == "Investment Banker", 98349,
ifelse(job == "Electrical Engineer", 73493,
ifelse(job == "Geology Research Associate", 52576,
ifelse(job == "Reporter", 35231,
ifelse(job == "Janitor", 22303, NA))))),
actual_rank = ifelse(job == "Investment Banker", 95,
ifelse(job == "Electrical Engineer", 90,
ifelse(job == "Geology Research Associate", 75,
ifelse(job == "Reporter", 55,
ifelse(job == "Janitor", 25, NA)))))) %>%
mutate(est_salary_diff = est_salary - actual_salary,
est_rank_diff = est_rank - actual_rank,
pct_salary_diff = ((est_salary_diff / actual_salary)*10),
est_salary_hi = ifelse(est_salary_diff>0, 1, 0),
log_salary_diff = log(abs(est_salary_diff)))
diff_plot <- ggplot(mturk_gather, aes(x = pct_salary_diff, color = job))
diff_plot + geom_density()
mturk_gather3 <- mturk_gather %>%
gather(question, answer, incdiff_toolarge:fairshot) %>%
filter(answer!="") %>%
mutate(answer = factor(answer,
levels = c("Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree")))
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Geology Research Associate" & question == "wealthy_taxes")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment), data = janitor_incdiff)
summary(model1)
mturk_gather_plot <- mturk_gather %>%
gather(question, answer, incdiff_toolarge:fairshot) %>%
mutate(agree = ifelse(answer == "Agree" | answer == "Strongly agree", 1, 0))
scatter_plot <- ggplot(mturk_gather_plot, aes(x = pct_salary_diff, y = est_rank,
color = factor(agree), shape = factor(treatment)))
scatter_plot + geom_point() + geom_jitter() + facet_grid(job ~ question) + theme(legend.position = "bottom")
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Geology Research Associate" & question == "fairshot")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Investment Banker" & question == "fairshot")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Electrical Engineer" & question == "fairshot")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Reporter" & question == "fairshot")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "fairshot")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Geology Research Associate" & question == "fairshot")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Geology Research Associate" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Reporter" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Reporter" & question == "incdiff_necessary")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Reporter" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment)*pct_salary_diff, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Reporter" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ as.factor(treatment) + pct_salary_diff, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Reporter" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ pct_salary_diff, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Investment Banker" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ pct_salary_diff, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Investment Banker" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ pct_salary_diff * factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ pct_salary_diff * factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ pct_salary_diff, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Investment Banker" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ pct_salary_diff, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Electrical Engineer" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ pct_salary_diff, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ pct_salary_diff, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ pct_salary_diff * factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ est_salary_hi * factor(treatment), data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(answer) ~ est_salary_hi, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(as.numeric(agree) ~ est_salary_hi, data = janitor_incdiff)
agree_model <- lm(agree ~ treatment, data = mturk_agree)
summary(agree_model)
agree_model <- lm(agree ~ est_salary_diff + treatment, data = mturk_agree)
mturk_gather3 <- mturk_gather %>%
gather(question, answer, incdiff_toolarge:fairshot) %>%
filter(answer!="") %>%
mutate(answer = factor(answer,
levels = c("Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree")),
agree = ifelse(answer == "Agree" | answer == "Strongly agree", 1, 0))
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(agree ~ est_salary_hi, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(agree ~ est_salary_hi * treatment, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(agree ~ est_salary_hi + treatment, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "incdiff_toolarge")
model1 <- lm(agree ~ treatment, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "fairshot")
model1 <- lm(agree ~ treatment, data = janitor_incdiff)
summary(model1)
table(mturk_gather3$salary_outlier)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "fairshot")
model1 <- lm(agree ~ pct_salary_diff + treatment, data = janitor_incdiff)
summary(model1)
janitor_incdiff <- mturk_gather3 %>%
filter(job == "Janitor" & question == "fairshot")
model1 <- lm(agree ~ pct_salary_diff * treatment, data = janitor_incdiff)
summary(model1)
